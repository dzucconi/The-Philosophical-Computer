1000 REM Evolution of randomized array of 64 '2-deep' strategies.  Program
1010 REM prints current status of populous strategies at right 
1020 REM Programming elements included here were developed in background 
1030 REM research for Patrick Grim, Gary Mar, and Paul St. Denis, THE 
1040 REM PHILOSOPHICAL COMPUTER: EXPLORATORY ESSAYS IN PHILOSOPHICAL 
1050 REM COMPUTER MODELING, Bradford Books/MIT press.  You are free to use 
1060 REM and adapt this program for research purposes only, subject to the 
1070 REM provision that this message be retained in its entirety as part of 
1071 REM your program.
1080 rem RANDOMIZE
1090 SET WINDOW 0,639,0,479
1100 REM                        SETS ACTIVE WINDOW ON SCREEN
1110 OPTION NOLET
1120 REM             TRU-BASIC PECULIARITY, TO AVOID ALWAYS USING LET 
1130 DIM SCORE(64,64)
1140 OPEN #1:NAME "escore3",CREATE OLD,ORG RECORD,RECSIZE 10
1150 REM                        OPENS EXISTING FILE 
1160 MAT READ #1:SCORE
1170 REM                 READS DATA FROM FILE
1180 DIM T1(64)
1190 DIM T2(64)
1200 DIM T3(64)
1210 DIM T4(64)
1220 DIM T5(64)
1230 DIM T6(64) 
1240 LET P = 1
1250 FOR U=0 TO 1
1260 FOR V=0 TO 1
1270 FOR W=0 TO 1
1280 FOR X=0 TO 1
1290 FOR Y=0 TO 1
1300 FOR Z=0 TO 1
1310 T1(P)=U
1320 T2(P)=V
1330 T3(P)=W
1340 T4(P)=X
1350 T5(P)=Y
1360 T6(P)=Z
1370 LET P=P+1
1380 NEXT Z
1390 NEXT Y
1400 NEXT X
1410 NEXT W
1420 NEXT V
1430 NEXT U
1440 DIM POP(64)
1450 DIM LASTPICK(2)
1460 DIM PLAYERS (64,64)
1470 DIM LLASTPICK(2)
1480 DIM PICK(2)
1490 DIM NG(64,64)
1500 DIM OG(64,64)
1510 DIM LEFT(64)
1520 DIM RIGHT(64)
1530 DIM UPPER(64)
1540 DIM LOWER(64)
1550 DIM ORDER(64)
1560 FOR I = 1 TO 64
1570 ORDER(I)=I
1580 NEXT I
1590 DIM GRIDSCORE(64,64)
1600 DIM H(9)
1610 DIM S(9)
1620 FOR X = 1 TO 64
1630 FOR Y = 1 TO 64
1640 RP=INT(RND*64)+1
1650 OG(X,Y)=RP
1660 POP(RP)=POP(RP)+1
1670 NEXT Y
1680 NEXT X
1690 GOSUB 2950
1700 MAT NG=OG
1710 FOR N = 1 TO 64
1720 LET LEFT(N)=N-1
1730 LET RIGHT(N)=N+1
1740 LET LOWER(N)=N-1
1750 LET UPPER(N)=N+1
1760 NEXT N
1770 LET LEFT(1)=64
1780 LET RIGHT(64)=1
1790 LET LOWER(1)=64
1800 LET UPPER(64)=1
1810 SET COLOR 15
1820 FOR I = 1 TO 25
1830 SET CURSOR I+1,60
1840 REM                 LOCATES CURSOR AT CERTAIN POSITION ON SCREEN
1850 PRINT USING "# # # # # #  ####":T1(ORDER(I)),T2(ORDER(I)),T3(ORDER(I)),T4(ORDER(I)),T5(ORDER(I)),T6(ORDER(I)),POP(ORDER(I))
1860 next I
1870 set color 15
1880 g = g+1
1890 set cursor I + 1, 62
1900 print "generation:  ";g
1910 FOR X = 1 TO 64
1920 FOR Y = 1 TO 64
1930 LET SSCORE=SCORE(OG(X,Y),OG(X,LOWER(Y)))
1940 LET NSCORE=SCORE(OG(X,Y),OG(X,UPPER(Y)))
1950 LET WSCORE=SCORE(OG(X,Y),OG(LEFT(X),Y))
1960 LET ESCORE=SCORE(OG(X,Y),OG(RIGHT(X),Y))
1970 LET SWSCORE=SCORE(OG(X,Y),OG(LEFT(X),LOWER(Y)))
1980 LET NWSCORE=SCORE(OG(X,Y),OG(LEFT(X),UPPER(Y)))
1990 LET SESCORE=SCORE(OG(X,Y),OG(RIGHT(X),LOWER(Y)))
2000 LET NESCORE=SCORE(OG(X,Y),OG(RIGHT(X),UPPER(Y)))
2010 GRIDSCORE(X,Y)=NSCORE+SSCORE+ESCORE+WSCORE+NWSCORE+NESCORE+SWSCORE+SESCORE
2020 NEXT Y
2030 NEXT X
2040 FOR X = 1 TO 64
2050 FOR Y = 1 TO 64
2060 H(1)=GRIDSCORE(X,UPPER(Y))
2070 S(1)=OG(X,UPPER(Y))
2080 H(2)=GRIDSCORE(RIGHT(X),UPPER(Y))
2090 S(2)=OG(RIGHT(X),UPPER(Y))
2100 H(3)=GRIDSCORE(RIGHT(X),Y)
2110 S(3)=OG(RIGHT(X),Y)
2120 H(4)=GRIDSCORE(RIGHT(X),LOWER(Y))
2130 S(4)=OG(RIGHT(X),LOWER(Y))
2140 H(5)=GRIDSCORE(X,LOWER(Y))
2150 S(5)=OG(X,LOWER(Y))
2160 H(6)=GRIDSCORE(LEFT(X),LOWER(Y))
2170 S(6)=OG(LEFT(X),LOWER(Y))
2180 H(7)=GRIDSCORE(LEFT(X),Y)
2190 S(7)=OG(LEFT(X),Y)
2200 H(8)=GRIDSCORE(LEFT(X),UPPER(Y))
2210 S(8)=OG(LEFT(X),UPPER(Y))
2220 H(9)=GRIDSCORE(X,Y)
2230 S(9)=OG(X,Y)
2240 ST = INT(RND*8)+1
2250 FOR R = ST TO 8
2260 IF H(R)<HIGH THEN 2290
2270 HIGH=H(R)
2280 WINSTRAT=S(R)
2290 NEXT R
2300 FOR R = 1 TO ST-1
2310 IF H(R)<HIGH THEN 2340
2320 HIGH=H(R)
2330 WINSTRAT=S(R)
2340 NEXT R
2350 IF H(9)>= HIGH THEN WINSTRAT=S(9)
2360 LET OLDCOL=OG(X,Y)
2370 LET NEWCOL=WINSTRAT
2380 POP(OLDCOL)=POP(OLDCOL)-1
2390 NG(X,Y)=WINSTRAT
2400 POP(NEWCOL)=POP(NEWCOL)+1
2410 HIGH=0
2420 LET C = OG(X,Y)-1
2430 LET A = X*7
2440 LET B = Y*7
2450 IF C < 16 THEN GOSUB 2530
2460 IF C>15 AND C<32 THEN GOSUB 2580
2470 IF C>31 AND C<48 THEN GOSUB 2630
2480 IF C>47 AND C<64 THEN GOSUB 2680
2490 IF C>63 THEN GOSUB 2730
2500 NEXT Y
2510 NEXT X
2520 GOTO 2780
2530 SET COLOR C
2540 BOX AREA A,A+5,B,B+5
2550 REM              FOREGROUNDCOLOR IS SET TO C, A RECTANGLE (5x5) 
2560 REM              IS DRAWN, AND FILLED WITH THIS COLOR
2570 RETURN
2580 SET COLOR C
2590 BOX AREA A,A+5,B,B+5
2600 IF C = 25 THEN SET COLOR 0 ELSE SET COLOR 9
2610 BOX AREA A+2,A+3,B+2,B+4
2620 RETURN
2630 SET COLOR C
2640 BOX AREA A,A+5,B,B+5
2650 IF C = 37 THEN SET COLOR 0 ELSE SET COLOR 5
2660 BOX AREA A+2,A+3,B+2,B+4
2670 RETURN
2680 SET COLOR C
2690 BOX AREA A,A+5,B,B+5
2700 IF C = 50 THEN SET COLOR 0 ELSE SET COLOR 2
2710 BOX AREA A+2,A+3,B+2,B+4
2720 RETURN
2730 SET COLOR C
2740 BOX AREA A,A+5,B,B+5
2750 SET COLOR 14
2760 BOX AREA A+2,A+3,B+2,B+4
2770 RETURN
2780 MAT OG=NG
2790 REM         ASSIGNS THE COMPLETE ARRAY NG TO THE ARRAY OG 
2800 GOSUB 2950
2810 FOR Y = 1 TO 25
2820 LET C3 = ORDER(Y)-1
2830 IF C3 < 16 THEN LET C2 = C3
2840 IF C3>15 AND C3<32 THEN LET C2 = 9
2850 IF C3>31 AND C3<48 THEN LET C2 = 5
2860 IF C3>47 AND C3<64 THEN LET C2 = 2
2870 IF C3>63 THEN LET C2 = 14
2880 IF C3=25 OR C3=37 OR C3=50 THEN LET C2=0
2890 SET COLOR C3
2900 BOX AREA 458,463,480-(Y*16+5),480-(Y*16+10)
2910 SET COLOR C2
2920 BOX AREA 460,461,480-(Y*16+7),480-(Y*16+9)
2930 NEXT Y
2940 GOTO 1820
2950 FL=0
2960 FOR I = 1 TO 63 
2970 IF POP(ORDER(I))=>POP(ORDER(I+1)) THEN 3020
2980 RK= ORDER(I)
2990 ORDER(I)= ORDER(I+1)
3000 ORDER(I+1)=RK
3010 FL=1
3020 NEXT I
3030 IF FL=1 THEN 2950
3040 RETURN
3050 END
